// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "underscore", "backbone", "collections/todos", "views/todos", "text!templates/stats.html", "common"], function($, _, Backbone, Todos, TodoView, statsTemplate, Common) {
    var AppView;
    AppView = Backbone.View.extend({
      el: "#todoapp",
      template: _.template(statsTemplate),
      events: {
        "keypress #new-todo": "createOnEnter",
        "click #clear-completed": "clearCompleted",
        "click #toggle-all": "toggleAllComplete"
      },
      initialize: function() {
        this.input = this.$("#new-todo");
        this.allCheckbox = this.$("#toggle-all")[0];
        this.$footer = this.$("#footer");
        this.$main = this.$("#main");
        this.todoViewsCache = {};
        _.bindAll(this);
        Todos.on("add", this.addOne, this);
        Todos.on("reset", this.addAll, this);
        Todos.on("change:completed", this.filterOne, this);
        Todos.on("filter", this.filterAll, this);
        Todos.on("all", this.render, this);
        return Todos.fetch();
      },
      render: function() {
        var completed, remaining;
        completed = Todos.completed().length;
        remaining = Todos.remaining().length;
        if (Todos.length) {
          this.$main.show();
          this.$footer.show();
          this.$footer.html(this.template({
            completed: completed,
            remaining: remaining
          }));
          this.$("#filters li a").removeClass("selected").filter("[href=\"#/" + (Common.TodoFilter || "") + "\"]").addClass("selected");
        } else {
          this.$main.hide();
          this.$footer.hide();
        }
        return this.allCheckbox.checked = !remaining;
      },
      addOne: function(todo) {
        var view;
        view = new TodoView({
          model: todo
        });
        return $("#todo-list").append(view.render().el);
      },
      addAll: function() {
        this.$("#todo-list").html("");
        return Todos.each(this.addOne, this);
      },
      filterOne: function(todo) {
        return todo.trigger("visible");
      },
      filterAll: function() {
        return Todos.each(this.filterOne, this);
      },
      newAttributes: function() {
        return {
          title: this.input.val().trim(),
          order: Todos.nextOrder(),
          completed: false
        };
      },
      createOnEnter: function(e) {
        if (e.which !== Common.ENTER_KEY || !this.input.val().trim()) {
          return;
        }
        Todos.create(this.newAttributes());
        return this.input.val("");
      },
      clearCompleted: function() {
        _.each(Todos.completed(), function(todo) {
          return todo.destroy();
        });
        return false;
      },
      toggleAllComplete: function() {
        var completed;
        completed = this.allCheckbox.checked;
        return Todos.each(function(todo) {
          return todo.save({
            completed: completed
          });
        });
      }
    });
    return AppView;
  });

}).call(this);
