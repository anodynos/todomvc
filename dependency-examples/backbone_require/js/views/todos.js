// Generated by CoffeeScript 1.3.3
(function() {

  define(["jquery", "underscore", "backbone", "text!templates/todos.html", "js/common"], function($, _, Backbone, todosTemplate, Common) {
    var TodoView;
    TodoView = Backbone.View.extend({
      tagName: "li",
      template: _.template(todosTemplate),
      events: {
        "click .toggle": "togglecompleted",
        "dblclick label": "edit",
        "click .destroy": "clear",
        "keypress .edit": "updateOnEnter",
        "blur .edit": "close"
      },
      initialize: function() {
        this.model.on("change", this.render, this);
        this.model.on("destroy", this.remove, this);
        return this.model.on("visible", this.toggleVisible, this);
      },
      render: function() {
        this.$el.html(this.template(this.model.toJSON()));
        this.$el.toggleClass("completed", this.model.get("completed"));
        this.toggleVisible();
        this.input = this.$(".edit");
        return this;
      },
      toggleVisible: function() {
        return this.$el.toggleClass("hidden", !this.isVisible());
      },
      isVisible: function() {
        var isCompleted;
        isCompleted = this.model.get("completed");
        return Common.TodoFilter === "" || (isCompleted && Common.TodoFilter === "completed") || (!isCompleted && Common.TodoFilter === "active");
      },
      togglecompleted: function() {
        return this.model.toggle();
      },
      edit: function() {
        this.$el.addClass("editing");
        return this.input.focus();
      },
      close: function() {
        var value;
        value = this.input.val().trim();
        if (value) {
          this.model.save({
            title: value
          });
        } else {
          this.clear();
        }
        return this.$el.removeClass("editing");
      },
      updateOnEnter: function(e) {
        if (e.keyCode === Common.ENTER_KEY) {
          return this.close();
        }
      },
      clear: function() {
        return this.model.destroy();
      }
    });
    return TodoView;
  });

}).call(this);
